{% if cicd %}
    {% if git_type == "S3" %}
output "s3_git_bucket_name" {
  description = "Bucket name for S3 remote git repo."
  value       = module.cicd.s3_git_bucket_name
}

output "s3_git_bucket_arn" {
  description = "ARN for S3 git bucket"
  value       = module.cicd.s3_git_bucket_arn
}

output "codebuild_project_name" {
  description = "The name of the CodeBuild project."
  value       = module.cicd.codebuild_project_name
}

output "codeartifact_domain_name" {
  description = "The name of the CodeArtifact domain."
  value       = module.cicd.codeartifact_domain_name
}

output "codeartifact_repository_name" {
  description = "The name of the CodeArtifact repository."
  value       = module.cicd.codeartifact_repository_name
}

output "codeartifact_region" {
  description = "The AWS region the CodeArtifact repository is in."
  value       = module.cicd.codeartifact_region
}
    {% elif git_type == "GitHub" %}
output "codebuild_project_names" {
  description = "A map of repository names to CodeBuild project names."
  value       = module.cicd.codebuild_project_names
}

output "codepipeline_names" {
  description = "A map of repository names to CodePipeline names."
  value       = module.cicd.codepipeline_names
}

output "codeartifact_domain_name" {
  description = "The name of the CodeArtifact domain."
  value       = module.cicd.codeartifact_domain_name
}

output "codeartifact_repository_name" {
  description = "The name of the CodeArtifact repository."
  value       = module.cicd.codeartifact_repository_name
}

output "codeartifact_region" {
  description = "The AWS region the CodeArtifact repository is in."
  value       = module.cicd.codeartifact_region
}
    {% endif %}
output "target_account_id" {
  description = "The AWS Account ID."
  value       = var.target_account_id
}
{% endif %}
{% if vpc %}
output "vpc_id" {
  description = "The ID of the VPC."
  value       = module.vpc_vpn.vpc_id
}

output "vpc_cidr" {
  description = "The CIDR of the VPC."
  value       = module.vpc_vpn.vpc_cidr
}

output "subnet_id" {
  description = "The ID of the private subnet."
  value       = module.vpc_vpn.subnet_id
}

output "client_vpn_endpoint_id" {
  description = "The ID of the Client VPN Endpoint."
  value       = module.vpc_vpn.client_vpn_endpoint_id
}

output "target_account_id" {
  description = "The AWS Account ID."
  value       = var.target_account_id
}

output "client_vpn_cidr" {
  description = "The CIDR block for the Client VPN client IP pool."
  value       = var.client_vpn_endpoint_client_cidr_block
}

output "server_certificate_pem" {
  description = "The PEM-encoded server certificate for the Client VPN."
  value       = module.vpc_vpn.server_certificate_pem
  sensitive   = true
}

output "ca_certificate_pem" {
  description = "The PEM-encoded CA certificate for signing client certificates."
  value       = module.vpc_vpn.ca_certificate_pem
  sensitive   = true
}

output "ca_private_key_pem" {
  description = "The PEM-encoded CA private key for signing client certificates."
  value       = module.vpc_vpn.ca_private_key_pem
  sensitive   = true
}
{% endif %}
{% if test_webapp %}
output "webapp_private_ip" {
  description = "The private IP address of the test web app EC2 instance."
  value       = module.test_webapp.webapp_private_ip
}

output "webapp_instance_id" {
  description = "The ID of the test web app EC2 instance."
  value       = module.test_webapp.webapp_instance_id
}
{% endif %}