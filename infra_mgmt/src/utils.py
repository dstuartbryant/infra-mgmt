import json


def quiet_terraform_output_json(filepath: str) -> dict:
    """Reads a JSON file generated by Terraform for capturing output and reduces its
    "noise".

    Args:
        filepath (str): Path to Terraform output JSON file

    Returns
        (dict): Less noisy dict
    """
    noisy_dict = json.load(open(filepath, "r"))
    quiet_dict = {}
    for k, v in noisy_dict.items():
        quiet_dict[k] = noisy_dict[k]["value"]

    return quiet_dict


def rearrange_quiet_terraform_output_dict(data: dict) -> dict:
    """Rearranges dictionary keys of a "quieted" Terraform output dictionary.

    WARNING: Unclear if this will work for every type of Terraform output dictionary.

    Args:
        data (dict): Quiet Terraform output dictionary.

    Returns:
        (dict): Reorganized dict
    """
    keys = list(data.keys())
    sub_keys = list(data[keys[0]].keys())
    new_dict = {}
    for sk in sub_keys:
        new_dict[sk] = {}
        for k, v in data.items():
            new_dict[sk][k] = v[sk]

    return new_dict
